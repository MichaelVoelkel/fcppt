[section Assertions]

[section Description]

The C standard library macro `assert` (defined in `<cassert>`) is the
only way assertions can be used with Standard C++ directly.
However, assert only provides the behaviour of calling `std::abort`,
and that's only if `NDEBUG` is not defined.

Fcppt instead provides several assert macros with different behaviour.
The main idea is that different classes of errors should be reported
differently.

* Errors that are violated preconditions should terminate the program.
* Errors that are violated postconditions should throw exceptions.
* Errors that stem from programming errors should also terminate the program.

In any case the assert macros gather information about where the error occured,
which is stored in `fcppt::assert_::information`. This class contains the
violated condition, the file, line and function is occured it, and an optional
message.

[import ../examples/assert.cpp]
[assert]

[endsect]

[xinclude doxygen_assert.xml]

[endsect]

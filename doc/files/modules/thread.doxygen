/**
\defgroup fcpptthread fcppt.thread
\ingroup fcpptmain
\brief Wrappers around boost.thread following <code>%std::thread</code> semantics

<code>%std::thread</code> has been accepted into <em>C++11</em> following the
design of boost.thread. However, one very important aspect of the destructor's
behaviour has been changed: <code>%std::thread</code>'s destructor terminates
the program if the thread is neither joined nor detached. The behaviour of
boost.thread's destructor is to detach an unjoined thread instead. This is very
dangerous to do implicitly, because a running thread you cannot hold onto can
always run past the main function and access data that has already been
destroyed. fcppt.thread wraps boost.thread but adds the semantics of
<code>%std::thread</code> to its thread destructor.
*/
namespace fcppt
{
/// Contains the thread class and typedefs and helper functions for threads
namespace thread{}
}

/**
\defgroup fcpptcontainertree fcppt.container.tree
\ingroup fcpptcontainer
\brief A tree data structure

<table id="toc">
<tr>
<td>

<ul>
	<li>\ref tree_introduction</li>
	<li>\ref tree_design</li>
	<li>\ref tree_traversals</li>
</ul>

</td>
</tr>
</table>

\section tree_introduction Introduction
An fcppt::container::tree::object<T> is a container modeling an n-ary tree
holding objects of type <code>T</code>. It has a value of type <code>T</code>
and children of type fcppt::container::tree::object<T>.

The tree tries to mimic the sequence containers from the standard library.
Also, its implementation is "minimal" in the sense that everything but trivial
operations are outsourced to external headers - the pre order traversal is an
example of this. Most of the operations are self-explanatory. Here is a small
example of the tree:

\snippet container/tree_simple.cpp main

Note also that all operations which implicitly depend on a parent being present
are undefined if \link fcppt::container::tree::object::has_parent has_parent
\endlink returns false. The same goes for all operations which depend on at
least one child being present and \link fcppt::container::tree::object::empty
empty \endlink returning true.

\section tree_design Design

Internally, a <code>fcppt::container::tree::object<T></code> holds a
<code>std::list</code> of
<code>std::unique_ptr<fcppt::container::tree::object<T>></code>. The advantage
of this approach (instead of holding trees directly in a list) is that moving
subtrees around is cheap. Iterators hide the fact that unique_ptrs are used and
return trees directly.

\section tree_traversals Iterators/Traversals

To only iterate over the tree's children, the following functions are provided.

\link fcppt::container::tree::object::begin begin \endlink, \link
fcppt::container::tree::object::end end \endlink, \link
fcppt::container::tree::object::rbegin rbegin \endlink, \link
fcppt::container::tree::object::rend rend \endlink

There are also external traversal classes that can be used to iterate over a
whole tree. Those are best explained using a little example:

\snippet container/tree_traversal.cpp main

Aside from \link fcppt::container::tree::pre_order pre_order \endlink, no other
traversals are implemented as of yet.
*/

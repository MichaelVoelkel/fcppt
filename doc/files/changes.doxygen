/**
\page changes Changes

\section changes_changes_to_310 3.1.0

\subsection changes_added_functionality_to_310 Added functionality

<ul>

<li>\ref fcpptcatch
	<p>
	Output operators now recurse into Catch's output code instead
	of using <code>operator<< </code>.
	</p>
	<ul>
	<li>Added Catch output for \link fcppt::record::object\endlink,
	\link fcppt::strong_typedef\endlink and \link fcppt::optional::object\endlink.</li>
	<li>Added \link fcppt::catch_::convert\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added \link fcppt::container::contains\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link FCPPT_STRING_LITERAL\endlink.</li>
	<li>Added \link fcppt::recursive\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_300 Removed functionality

<ul>

<li>\ref fcpptcatch
	<ul>
	<li>Removed <code>fcppt::catch_::defer</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainertuple
	<ul>
	<li>Removed <code>fcppt::container::tuple::to_varargs</code>. Use <code>std::apply</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_300 3.0.0

<p>
fcppt now uses <code>C++-17</code>.
</p>

\subsection changes_added_functionality_to_300 Added functionality

<ul>

<li>\ref fcpptbrigand
	<ul>
	<li>Added \link fcppt::brigand::is_set\endlink.</li>
	<li>Added \link fcppt::brigand::unique\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_300 Changed functionality

<ul>
<li>\ref fcpptoptional
	<ul>
	<li>Now uses <code>std::optional</code> in its implementation.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>All labels of a record must be distinct now.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>

	Now uses <code>std::variant</code> in its implementation. This change makes the constructor
	of \link fcppt::variant::object\endlink stricter,
	since it now uses <code>std::is_constructible</code>. For example, an rvalue of a type that is
	not movable cannot be used to construct a variant.
	</li>
	<li>
	Removed the assignment operator of \link fcppt::variant::object\endlink that assigned
	an underlying value. Assign a new variant instead.
	</li>
	<li>
	Moved <code>fcppt/variant/less.hpp</code>, <code>fcppt/variant/equal.hpp</code>
	and <code>fcppt/variant/not_equal.hpp</code>. into <code>fcppt/variant/comparison.hpp</code>.
	</li>
	<li>All types of a variant must be distinct now.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_2100 2.10.0

\subsection changes_added_functionality_to_2100 Added functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Added additional <code>constexpr</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li><code>external_begin.h(pp)</code> and <code>external_end.h(pp)</code> includes can now overlap.</li>
	</ul>
</li>

<li>\ref fcpptpreprocessor
	<ul>
	<li>Added \link FCPPT_PP_DISABLE_CLANG_WARNING\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_2100 Changed functionality

<ul>

<li>\ref fcpptlog
	<ul>
	<li>Renamed <code>fcppt::log::_</code> to \link fcppt::log::out\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_2100 Removed functionality

<ul>

<li>\ref fcpptvarious
	<ul>
	<li>Removed <code>FCPPT_NONASSIGNABLE</code>.</li>
	</ul>
</li>

</ul>


\section changes_changes_to_290 2.9.0

\subsection changes_added_functionality_to_290 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::split_string\endlink.</li>
	<li>Added \link fcppt::algorithm::map_impl\endlink as a customization point for \link fcppt::algorithm::map\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainertuple
	<ul>
	<li>Move rvalue references out of tuples regardless whether the tuples are rvalues themselves.</li>
	<li>Added \link fcppt::container::tuple::move_element\endlink.</li>
	<li>Added \link fcppt::container::tuple::type_at\endlink.</li>
	<li>Added \link fcppt::container::tuple::types_of\endlink.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added \link fcppt::io::peek\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Added \link fcppt::options::indent\endlink and added indentation to various parser outputs.</li>
	<li>Added \link fcppt::options::combine_errors\endlink and use it in \link fcppt::options::sum\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added \link fcppt::variant::apply\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_290 Changed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>To use \link fcppt::algorithm::map\endlink on <code>std::array</code>, you have to include
	<code>fcppt/algorithm/map_array.hpp</code>.</li>
	<li>Moved <code>fcppt::algorithm::join</code> to \link fcppt::container::join\endlink.</li>
	<li>Moved <code>fcppt::algorithm::key_set</code> to \link fcppt::container::key_set\endlink.</li>
	<li>Moved <code>fcppt::algorithm::set_difference</code> to \link fcppt::container::set_difference\endlink.</li>
	<li>Moved <code>fcppt::algorithm::set_intersection</code> to \link fcppt::container::set_intersection\endlink.</li>
	<li>Moved <code>fcppt::algorithm::set_union</code> to \link fcppt::container::set_union\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Changed \link fcppt::options::sum\endlink to return a record containing a variant.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>String conversions that can fail now return optionals, notably \link fcppt::narrow\endlink, \link fcppt::to_std_string\endlink and \link fcppt::from_std_wstring\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>\link fcppt::type_name\endlink, \link fcppt::type_name_from_info\endlink and \link fcppt::type_name_from_index\endlink now return <code>std::string</code>,</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_290 Removed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::append</code>.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Removed <code>fcppt::filesystem::file_to_string</code>.</li>
	<li>Removed <code>fcppt::filesystem::size_to_size_t</code>.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Removed <code>fcppt::output_to_std_string_convert</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::apply_unary</code>, <code>fcppt::variant::apply_binary</code> and <code>fcppt::variant::apply_ternary</code>.
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_290 Bugfixes

<ul>

<li>
Updated catch includes to use <code>catch2/catch.hpp</code>.
</li>

<li>\ref fcpptintrusive
	<ul>
	<li>Fixed assignment of \link fcppt::intrusive::base\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Use <code>std::set</code> instead of <code>std::unordered_set</code> so that
	<code>set_union</code> actually works.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Fixed string conversion when partial writes occur that don't write anything.</li>
	</ul>
</li>

</ul>


\section changes_changes_to_280 2.8.0

\subsection changes_general_to_280 General changes

<ul>
<li>
Replaced <code>boost.test</code> with <code>Catch2</code>.
This means that in order to build the tests (<code>-D ENABLE_TEST=ON</code>),
Catch2 is now required.
</li>
</ul>

\subsection changes_added_functionality_to_280 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::unique\endlink and \link fcppt::algorithm::unique_if\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainerarray
	<ul>
	<li>Allow rvalues in \link fcppt::container::array::push_back\endlink.</li>
	<li>Added \link fcppt::container::array::apply\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added \link fcppt::container::grid::dim_type\endlink and \link fcppt::container::grid::pos_type\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainertuple
	<ul>
	<li>Added \link fcppt::container::tuple::push_back\endlink.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added \link fcppt::either::failure_type\endlink and \link fcppt::either::success_type\endlink.</li>
	<li>Added \link fcppt::either::join\endlink.</li>
	</ul>
</li>

<li>\ref fcpptiterator
	<ul>
	<li>Added <code>operator==</code> to \link fcppt::iterator::range\endlink.</li>
	</ul>
</li>

<li>\ref fcpptrange
	<ul>
	<li>Added \link fcppt::range::size\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Added \link fcppt::options::commands\endlink, which parses sub-commands.</li>
	<li>Added \link fcppt::options::unit_switch\endlink and \link fcppt::options::unit\endlink.</li>
	<li>Added \link fcppt::options::sum\endlink.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added \link fcppt::record::all_disjoint\endlink.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Added <code>fcppt::output_to_std_string_convert</code>.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added \link fcppt::strong_typedef_apply\endlink.</li>
	<li>Added \link fcppt::strong_typedef_map\endlink.</li>
	<li>Added \link fcppt::strong_typedef_tag\endlink.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added \link fcppt::type_traits::remove_cv_ref_t\endlink.</li>
	<li>Added \link fcppt::type_traits::value_type\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link fcppt::copy\endlink.</li>
	<li>Added \link fcppt::not_\endlink.</li>
	<li>Added \link fcppt::hash_combine\endlink and \link fcppt::hash\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_280 Changed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Moved <code>fcppt::algorithm::array_map</code>,
	<code>fcppt::algorithm::array_init</code>, <code>fcppt::algorithm::array_init_const</code>,
	<code>fcppt::algorithm::array_init_move</code>, <code>fcppt::algorithm::array_push_back</code>
	and <code>fcppt::container::make_array</code>
	to \ref fcpptcontainerarray.</li>
	<li>Renamed <code>fcppt::algorithm::vararg_map</code> to \link fcppt::container::tuple::vararg_map\endlink.</li>
	</ul>
</li>

<li>fcpptassign
	<ul>
	<li>Moved <code>fcppt::assign::make_container</code> to \link fcppt::container::make\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Renamed <code>fcppt::container::untuple</code> to <code>fcppt::container::tuple::to_varargs</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainerarray
	<ul>
	<li>\link fcppt::container::array::map\endlink no longer uses an explicit result type.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Renamed <code>fcppt::math::dim::construct</code> to \link fcppt::math::dim::push_back\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Renamed <code>fcppt::math::vector::construct</code> to \link fcppt::math::vector::push_back\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>The active and inactive values in \link fcppt::options::flag\endlink must be different now.</li>
	<li>All long and short names must be distinct now.</li>
	<li>All parsers and their parameters are now passed as rvalue references.
	Use \link fcppt::make_cref\endlink or \link fcppt::copy\endlink to pass them.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Renamed <code>fcppt::insert_to*_string</code> to <code>fcppt::output_to*_string</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_280 Removed functionality

<ul>

<li>Removed <code>fcppt.mpl</code>.</li>

<li>\ref fcpptalgorithm
	<ul>
	<li> Removed <code>fcppt::algorithm::array_binary_map</code>. This has been replaced by \link fcppt::container::array::apply\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_280 Bugfixes

<ul>

<li>\ref fcpptintrusive
	<ul>
	<li>Fixed unlinking of the last element.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_270 2.7.0

\subsection changes_general_to_270 General changes

<ul>
<li>
Boost is now optional, which can be controlled by the <code>ENABLE_BOOST</code> CMake flag. It defaults
to <code>ON</code> if Boost is found. To build <code>fcppt_filesystem</code>, <code>fcppt_system</code>
or fcppt's tests, Boost is still required.
Furthermore, all Boost-specific functionality has been moved to <code>fcppt_boost</code>.
To replace <code>boost::mpl</code>, <code>Brigand</code> has been added as a dependency, which
can be obtained from <a href="https://github.com/edouarda/brigand">here</a>. It is a small, header-only
C++11 library that has no dependencies itself.</li>
<li>Removed <code>-Weffc++</code> warning. Unfortunately, this warning has become even more broken in <code>gcc-8</code>.</li>
</ul>

\subsection changes_added_functionality_to_270 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Allow <code>std::array</code> in \link fcppt::algorithm::map\endlink.</li>
	<li>Allow rvalues in <code>fcppt::algorithm::array_map</code>.</li>
	</ul>
</li>

<li>\ref fcpptbrigand
	<p>
	New library for brigand utility functions.
	</p>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Added \link fcppt::cast::promote_int\endlink.</li>
	<li>Added \link fcppt::cast::to_uint_ptr\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added \link fcppt::container::map_values_ref\endlink and \link fcppt::container::map_values_copy\endlink.</li>
	<li>Added \link fcppt::container::insert\endlink.</li>
	<li>Added \link fcppt::container::pop_front\endlink.</li>
	<li>Allow move-only types in \link fcppt::container::pop_front\endlink and \link fcppt::container::pop_back\endlink.</li>
	<li>Added \link fcppt::container::size\endlink.</li>
	</ul>
</li>

<li>\ref fcpptintrusive
	<p>New library that is a simple replacement for <code>boost::intrusive::list</code>.
	It only supports movable types. Furthermore, an element must be initialized
	with the list it is going to be a member of.
	</p>
</li>

<li>\ref fcpptiterator
	<p>New library that provides a base class to implement iterators from
	and an iterator range.</p>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added \link fcppt::math::div\endlink.</li>
	<li>Added \link fcppt::math::is_zero\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Added \link fcppt::math::dim::binary_map\endlink.</li>
	<li>Added \link fcppt::math::dim::sequence\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Added \link fcppt::math::matrix::binary_map\endlink.</li>
	<li>Added \link fcppt::math::matrix::map\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Added \link fcppt::math::vector::binary_map\endlink.</li>
	<li>Added \link fcppt::math::vector::sequence\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added \link fcppt::optional::sequence\endlink.</li>
	</ul>
</li>

<li>\ref fcpptrange
	<p>
	New library that implements some utility functions for ranges.
	</p>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added \link fcppt::record::element_tag_tuple\endlink.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Added \link fcppt::is_reference\endlink.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added \link fcppt::type_traits::function_result\endlink.</li>
	<li>Added \link fcppt::type_traits::is_value\endlink.</li>
	<li>Added \link fcppt::type_traits::is_std_tuple\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link fcppt::move_clear\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_270 Changed functionality

<ul>

<li>\ref fcpptcontainertree
	<ul>
	<li>Removed nonconst access to the children list.</li>
	<li>\link fcppt::container::tree::object::front\endlink and \link fcppt::container::tree::object::back\endlink now return optional references.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<ul>
	<li>Removed <code>boost::format</code> from \link fcppt::log::format::inserter\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>\link fcppt::math::ceil_div\endlink and \link fcppt::math::ceil_div_signed\endlink now return optionals.</li>
	<li>\link fcppt::math::mod\endlink now returns an optional.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>All versions of <code>operator/</code> now return optionals.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>\link fcppt::math::vector::ceil_div_signed\endlink now returns an optional.</li>
	<li>\link fcppt::math::vector::mod\endlink now returns an optional.</li>
	<li>\link fcppt::math::vector::atan2\endlink now returns an optional.</li>
	<li>\link fcppt::math::vector::angle_between\endlink, \link fcppt::math::vector::angle_between_cast\endlink,
	\link fcppt::math::vector::signed_angle_between\endlink and \link fcppt::math::vector::signed_angle_between_cast\endlink
	now return optionals.</li>
	<li>All versions of <code>operator/</code> now return optionals.</li>
	</ul>
</li>

<li>\ref fcpptrange
	<ul>
	<li>Moved <code>fcppt::range_hash</code> to \link fcppt::range::hash\endlink.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Removed <code>make_strong_typedef.hpp</code> from <code>strong_typedef.hpp</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_270 Removed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::levenshtein</code> and <code>fcppt::algorithm::shortest_levenshtein</code>,</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>fcppt::cast::promote</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::to_array_type_tpl</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Removed <code>operator%</code>, <code>operator%=</code> and <code>operator/=</code>.</li>
	<li>Removed <code>operator+</code> and <code>operator-</code> that took a scalar.</li>
	<li>Removed unary <code>operator+</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Removed <code>operator/=</code> and <code>operator/</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Removed <code>operator%</code>, <code>operator%=</code> and <code>operator/=</code>.</li>
	<li>Removed <code>operator+</code> and <code>operator-</code> that took a scalar.</li>
	<li>Removed unary <code>operator+</code>.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<p>This library is in the process of being replaced by \ref fcpptbrigand.</p>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Removed <code>fcppt::record::disjoint_product_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_map_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_to_label_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_to_type_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_vector_tpl</code>,</li>
	<li>Removed <code>fcppt::record::label_set_tpl</code>,</li>
	<li>Removed <code>fcppt::record::label_value_type_tpl</code>,</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Removed <code>operator/</code>, <code>operator/=</code>, <code>operator%</code> and <code>operator%=</code>.</li>
	<li>Removed the unary <code>operator+</code>.</li>
	<li>Removed the shift operators <code>operator<<</code>, <code>operator<<=</code>, <code>operator>></code> and <code>operator>>=</code>.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Removed <code>fcppt::type_traits::is_iterable</code>, <code>fcppt::type_traits::has_iterator</code> and <code>fcppt::type_traits::has_const_iterator</code>.</li>
	<li>Removed <code>FCPPT_TYPE_TRAITS_GENERATE_HAS_TYPE</code> and <code>FCPPT_TYPE_TRAITS_GENERATE_HAS_MEMBER_FUNCTION</code>.</li>
	<li>Removed <code>fcppt::type_traits::is_iterator</code>.</li>
	<li>Removed <code>fcppt::type_traits::function_pointer_to_reference</code>.</li>
	<li>Removed <code>fcppt::type_traits::is_input_iterator</code>, <code>fcppt::type_traits::is_output_iterator</code>,
	<code>fcppt::type_traits::is_forward_iterator</code>, <code>fcppt::type_traits::bidirectional_iterator</code> and
	<code>fcppt::type_traits::is_random_access_iterator</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::types_of_tpl</code>.</li>
	</ul>
</li>

</ul>


\section changes_changes_to_260 2.6.0

\subsection changes_added_functionality_to_260 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::equal\endlink.</li>
	<li><code>fcppt::algorithm::append</code> now also works on rvalues.</li>
	<li>\link fcppt::algorithm::map\endlink now uses \link fcppt::algorithm::loop\endlink, so it works on different ranges.</li>
	<li>Allow <code>fcppt::algorithm::join</code> to join maps and sets.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added \link fcppt::container::dynamic_array\endlink which is a simple array for uninitialized, dynamically-sized storage.</li>
	<li>Added \link fcppt::container::output\endlink that outputs a container to a stream.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbuffer
	<p>
	This sub-library adds \link fcppt::container::buffer::object\endlink and utility functions which can be used to provide a buffer to external functions that write into raw memory.
	The buffer contains a read and a write area.
	</p>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Added \link FCPPT_CONFIG_MSVC_VERSION_AT_LEAST\endlink.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added \link fcppt::either::map_failure\endlink.</li>
	<li>Added \link fcppt::either::error\endlink, \link fcppt::either::no_error\endlink, \link fcppt::either::fold_error\endlink and \link fcppt::either::error_from_optional\endlink.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added \link fcppt::enum_::names\endlink and \link fcppt::enum_::names_impl\endlink.
	<li>Added \link fcppt::enum_::from_string\endlink and \link fcppt::enum_::from_string_impl\endlink.
	<li>Added \link fcppt::enum_::to_string\endlink and \link fcppt::enum_::to_string_impl\endlink.
	<li>Added \link fcppt::enum_::input\endlink and \link fcppt::enum_::output\endlink.
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Added \link fcppt::filesystem::create_directory\endlink, \link fcppt::filesystem::create_directory_error\endlink and \link fcppt::filesystem::create_directories_recursive\endlink.</li>
	<li>Added \link fcppt::filesystem::file_size\endlink.</li>
	<li>Added <code>fcppt::filesystem::size_to_size_t</code>.</li>
	<li>Added \link fcppt::filesystem::open\endlink and \link fcppt::filesystem::open_exn\endlink.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added \link fcppt::io::write_chars\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Added safe accessors for matrices up to a size of <code>4 x 4</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added \link fcppt::optional::to_container\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Output errors from the second argument as well in \link fcppt::options::product\endlink.</li>
	<li>Added <code>fcppt/options/pretty_type_enum.hpp</code> that outputs all possible enumerators via \link fcppt::enum_::names\endlink.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Added \link fcppt::add_reference\endlink.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Added \link fcppt::unique_ptr_from_std\endlink.</li>
	<li>Added \link fcppt::unique_ptr_dynamic_cast\endlink.</li>
	<li>Added \link fcppt::shared_ptr_hash\endlink and the corresponding <code>std::hash</code> specialization.</li>
	<li>Added \link fcppt::enable_shared_from_this\endlink.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added nonconst get function.</li>
	</ul>
</li>

<li>\ref fcpptsystem
	<p>
	New library that wraps some functionality from <code>boost.system</code>.
	</p>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link FCPPT_MAIN\endlink as a name for the <code>main</code> function to support unicode arguments in Windows.</li>
	<li>Added <code>operator==</code>, <code>operator!=</code> and <code>operator<< </code> for \link fcppt::unit\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_260 Changed functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li><code>find_package(fcppt)</code> now adds fcppt's module path to <code>CMAKE_MODULE_PATH</code>.</li>
	<li>fcppt now uses <code>GNUInstallDirs.cmake</code> instead of its own variables.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Renamed <code>fcppt::container::raw_vector</code> to \link fcppt::container::raw_vector::object\endlink.</li>
	<li>Moved comparison functions of \link fcppt::container::raw_vector::object\endlink to <code>fcppt/container/raw_vector/comparison.hpp</code>.</li>
	<li>Redesigned \link fcppt::container::raw_vector::object\endlink. It now only exposes essential functions and is no longer being meant as a replacement for <code>std::vector</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Renamed <code>operator[]</code> of \link fcppt::container::grid::object\endlink to \link fcppt::container::grid::object::get_unsafe\endlink.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<p>
	Moved most functionality that is related to contiguous enums to the \link fcppt::enum_\endlink namespace.
	</p>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li><code>fcppt::filesystem::file_to_string</code> now returns \link fcppt::optional_string\endlink for most errors.</li>
	<li>\link fcppt::filesystem::ifstream\endlink, \link fcppt::filesystem::ofstream\endlink and \link fcppt::filesystem::fstream\endlink now use <code>std::basic_ifstream</code>,
	<code>std::basic_ofstream</code> and <code>std::basic_fstream</code> instead of the boost variants.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Split <code>fcppt::math::at_c</code> into \link fcppt::math::vector::at\endlink, \link fcppt::math::dim::at\endlink and \link fcppt::math::matrix::at_r\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Renamed <code>operator[]</code> of \link fcppt::math::dim::object\endlink to \link fcppt::math::dim::object::get_unsafe\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Renamed <code>operator[]</code> of \link fcppt::math::matrix::object\endlink to \link fcppt::math::matrix::object::get_unsafe\endlink.</li>
	<li>Renamed <code>fcppt::math::matrix::at_c</code> to \link fcppt::math::matrix::at_r_c\endlink.</li>
	<li>Renamed <code>fcppt::math::matrix::delete_row_and_column_static</code> to \link fcppt::math::matrix::delete_row_and_column\endlink.</li>
	<li>\link fcppt::math::matrix::row_type\endlink is now an \link fcppt::math::vector::static_\endlink instead of a <code>std::array</code>.</li>
	<li>\link fcppt::math::matrix::index\endlink now uses functions that return its row and column instead of static constants.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Renamed <code>operator[]</code> of \link fcppt::math::vector::object\endlink to \link fcppt::math::vector::object::get_unsafe\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Renamed <code>fcppt::options::custom_pretty_type</code> to \link fcppt::options::pretty_type_impl\endlink.</li>
	<li>Don't output values of flags. Output operators are usually not defined or their results are meaningless to the user.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Signals with a result now get the initial value when called instead of at construction time, which allows rvalues to be used.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Moved output operator of \link fcppt::shared_ptr\endlink to <code>fcppt/shared_ptr_output.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Changed \link fcppt::variant::dynamic_cast_\endlink to take an MPL sequence of the types to cast instead of an MPL sequence of references.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>\link fcppt::args\endlink and \link fcppt::args_from_second\endlink now use \link fcppt::args_char\endlink instead of <code>char</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_260 Removed functionality

<ul>

<li>\ref fcpptcontainer
	<ul>
	<li>Removed <code>fcppt::container::is_std_vector</code>.</li>
	<li>Removed <code>fcppt::container::is_raw_vector</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Removed constructor taking \link fcppt::no_init\endlink. The underlying container is now always a <code>std::vector</code>.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Removed <code>fcppt::filesystem::exception</code>.</li>
	<li>Removed <code>fcppt::filesystem::create_directories_recursive_exn</code> and <code>fcppt::filesystem::create_directory_exn</code>.</li>
	<li>Removed <code>fcppt::filesystem::is_executable</code> which is covered by <code>boost.filesystem</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Removed the dynamic version of <code>fcppt::math::matrix::delete_row_and_column</code>.</li>
	</ul>
</li>

\subsection changes_bugfixes_to_260 Bugfixes

<ul>

<li>\ref fcpptsignal
	<ul>
	<li>Don't forward arguments into signal because they have to be used multiple times.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Fixed initialization of <code>std::mbstate_t</code> when doing character conversions.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Fixed moving of nested variants.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_251 2.5.1

\subsection changes_added_functionality_to_251 Added functionality

<ul>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::sequence_to_string</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added \link fcppt::variant::types_of\endlink and <code>fcppt::variant::types_of_tpl</code>.</li>
	<li>Added move semantics to <code>fcppt::variant::apply_unary</code>, <code>fcppt::variant::apply_binary</code> and <code>fcppt::variant::apply_ternary</code>.</li>
	<li>Improved the error message of \link fcppt::variant::invalid_get\endlink.</li>
	<li>Added \link fcppt::variant::types_string\endlink.</li>
	<li>Added \link fcppt::variant::current_type_name\endlink.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_250 2.5.0

\subsection changes_added_functionality_to_250 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::reverse\endlink.</li>
	<li>Move rvalues in \link fcppt::algorithm::map\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added \link fcppt::container::move_range\endlink and \link fcppt::container::make_move_range\endlink.</li>
	<li>Added \link fcppt::container::pop_back\endlink.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added \link fcppt::io::extract\endlink which can also read objects of types that take \link fcppt::no_init\endlink.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<ul>
	<li>Added <code>operator<<</code> and <code>operator>></code> for \link fcppt::log::level\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added \link fcppt::math::to_array_type\endlink, <code>fcppt::math::to_array_type_tpl</code>, \link fcppt::math::from_array\endlink and \link fcppt::math::to_array\endlink.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::set_intersection</code>.</li>
	<li>Added <code>fcppt::mpl::set_union</code>.</li>
	<li>Added <code>fcppt::mpl::set_difference</code>.</li>
	<li>Added <code>fcppt::mpl::set_symmetric_difference</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added \link fcppt::optional::make_if\endlink.</li>
	<li>Added \link fcppt::optional::nothing\endlink.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<p>
	New library for parsing command-line options, similar to Haskell's optparse-applicative.
	</p>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added \link fcppt::record::label_set\endlink and <code>fcppt::record::label_set_tpl</code>.</li>
	<li>Added \link fcppt::record::are_disjoint\endlink.</li>
	<li>Added \link fcppt::record::disjoint_product\endlink and <code>fcppt::record::disjoint_product_tpl</code>.</li>
	<li>Added \link fcppt::record::multiply_disjoint\endlink.</li>
	<li>Added nonconst \link fcppt::record::get\endlink and \link fcppt::record::object::get\endlink.</li>
	<li>Added \link fcppt::record::has_label\endlink.</li>
	<li>Added <code>fcppt::record::label_value_type_tpl</code>.</li>
	<li>Added \link fcppt::record::are_equivalent\endlink.</li>
	<li>Added \link fcppt::record::element_map\endlink and <code>fcppt::record::element_map_tpl</code>.</li>
	<li>Allow <code>==</code> and <code>!=</code> comparison for equivalent records.</li>
	<li>Added \link fcppt::record::permute\endlink.</li>
	<li>Added \link fcppt::record::map_elements\endlink and \link fcppt::record::map\endlink.</li>
	<li>Added \link fcppt::record::element_vector \endlink and <code>fcppt::record::element_vector_tpl</code>.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added \link fcppt::no_init\endlink constructor to \link fcppt::strong_typedef\endlink.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added \link fcppt::type_traits::constructible_from\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link fcppt::args_from_second\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_250 Changed functionality

<ul>

<li>\ref fcpptmath
	<ul>
	<li>Moved <code>fcppt::math::static_storage</code>,
	<code>fcppt::math::matrix::static_storage</code>,
	<code>fcppt::math::map</code> and <code>fcppt::math::binary_map</code>
	to detail.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>\link fcppt::optional::alternative\endlink now evaluates its second argument only if the first is nothing.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>\link fcppt::args_vector\endlink now uses \link fcppt::string\endlink instead of <code>std::string</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_250 Bugfixes

<ul>

<li>\ref fcpptrecord
	<ul>
	<li>Fixed output of records to wide streams.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_241 2.4.1

\subsection changes_bugfixes_to_241 Bugfixes

<ul>

<li><code>CMake</code>
	<ul>
	<li>Set <code>CMAKE_CXX_STANDARD</code> to <code>14</code> in order to fix a bug with imported Qt targets.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_240 2.4.0

\subsection changes_added_functionality_to_240 Added functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Allow nonconst references and arbitrary return types in \link fcppt::cast::apply\endlink.</li>
	<li>Added \link fcppt::cast::dynamic_fun\endlink and \link fcppt::cast::dynamic_cross_fun\endlink.</li>
	<li>Added \link fcppt::cast::dynamic_any\endlink and \link fcppt::cast::dynamic_any_fun\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added \link fcppt::container::grid::resize\endlink.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added \link fcppt::either::failure_opt\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added \link fcppt::math::power_of_2\endlink.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Added \link fcppt::reference_to_const\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added \link fcppt::variant::dynamic_cast_\endlink which tries several dynamic casts.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_240 Changed functionality

<ul>

<li>\ref fcpptmath
	<ul>
	<li>Renamed <code>fcppt::math::generate_binary_vectors</code> to \link fcppt::math::vector::bit_strings\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_240 Removed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Removed unused <code>fcppt::cast::apply_fun</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Removed <code>%fcppt::container::grid::object::{rbegin, rend, cbegin, cend, crbegin, crend}</code>.</li>
	<li>Removed <code>fcppt::container::grid::object::resize</code> and <code>fcppt::container::grid::object::resize_init</code>.</li>
	<li>Removed <code>fcppt::container::grid::resize_preserve</code> and <code>fcppt::container::grid::resize_preserve_init</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::step</code>.</li>
	<li>Removed <code>fcppt::math::bresenham</code> and <code>fcppt::math::bresenham_thick</code>.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Removed <code>fcppt::reference<T>::get_pointer</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_230 2.3.0

\subsection changes_added_functionality_to_230 Added functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li>Set <code>FOLDER</code> properties on targets.</li>
	<li>Added <code>fcppt_utils_set_target_folder</code>.</li>
	<li>Added <code>fcppt_utils_add_example</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Ignore VC++ warning <code>4309</code> (overflow of a constant) in external headers.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added <code>fcppt::container::untuple</code>.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added \link fcppt::either::make_success\endlink and \link fcppt::either::make_failure\endlink.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added \link fcppt::io::widen_string\endlink.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::index_of_iterator</code>.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<p>
	New library that implements <em>generic records</em>, whose elements are accessed by unique label types.
	</p>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added <code>fcppt/variant/comparison.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link fcppt::unit\endlink.</li>
	<li>\link fcppt::move_if\endlink and \link fcppt::move_if_rvalue\endlink now also work on rvalues.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_230 Changed functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li><code>fcppt_utils_add_test</code> now gets the test directory as argument as well.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li><code>fcppt::algorithm::vararg_map</code> now uses a fusion sequence instead of an MPL sequence.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_220 2.2.0

\subsection changes_added_functionality_to_220 Added functionality

<ul>

<li><code>CMake</code>
	<p>
	Added <em>interface libraries</em> to fcppt's exported targets. For
	example, <code>fcppt_core_interface</code> can be used to inherit the
	include paths and compile definitions from <code>fcppt_core</code>
	without linking to the library.
	</p>
	<ul>
	<li>Added <code>INCLUDE_DIRS</code> and <code>LINK_LIBS</code> to
	<code>fcppt_utils_add_dummy_target</code>.</li>
	<li>Added <code>fcppt_utils_is_path_prefix_of</code>.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::fold_break\endlink.</li>
	<li>Added \link fcppt::algorithm::equal_range\endlink.</li>
	<li>Added \link fcppt::algorithm::binary_search\endlink.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Added <code>FCPPT_CONFIG_GNU_GCC_COMPILER</code> to distinguish gcc from clang.</li>
	<li>Ignore <code>-Wundefined-var-template</code> for
	<code>clang-3.9</code> in external headers.</li>
	<li>Ignore <code>-Wsuggest-override</code> in external headers.</li>
	<li>Ignore <code>-Wnull-dereference</code> for <code>gcc-6</code> in external headers.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Added \link fcppt::container::bitfield::init\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainertree
	<ul>
	<li>Added \link fcppt::container::tree::make_pre_order\endlink.</li>
	<li>Added \link fcppt::container::tree::make_to_root\endlink.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Added \link fcppt::filesystem::directory_range\endlink.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>The type of the first zero in <code>fcppt::mpl::partial_sums</code> can now be specified.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added \link fcppt::optional::to_pointer\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_220 Changed functionality

<ul>
<li><code>CMake</code>
	<ul>
	<li>Use named arguments in <code>fcppt_utils_generate_config</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added <code>_fwd</code> headers to \link fcppt::io::istream\endlink,
	\link fcppt::io::ostream\endlink, \link fcppt::io::istringstream\endlink,
	\link fcppt::io::ostringstream\endlink and \link fcppt::io::stringstream\endlink.</li>
	<li>Moved <code>fcppt::io::ifstream</code>, <code>fcppt::io::ofstream</code> and
	<code>fcppt::io::fstream</code> to \link fcppt::filesystem::ifstream\endlink,
	\link fcppt::filesystem::ofstream\endlink and \link fcppt::filesystem::fstream\endlink.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<p>
	The logging library went through a major rewrite, with the purpose
	to remove global objects.</p>
	<ul>
	<li>\link fcppt::log::object\endlink now always refers to an \link
	fcppt::log::context\endlink.</li>
	<li>Log levels are stored in \link fcppt::log::context\endlink objects
	only. This way, they can be set before any log locations are
	created.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Renamed <code>fcppt::container::bitfield::object_from_enum</code>
	to \link fcppt::container::bitfield::enum_object\endlink and introduced
	an <code>_fwd</code> header.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_220 Removed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>fcppt::cast::static_downcast_ptr</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_210 2.1.0

\subsection changes_general_to_210 General changes

<ul>
<li>
	<b>VC++ from Visual Studio 2015 Update 2</b> is now supported.
</li>
</ul>

\subsection changes_added_functionality_to_210 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::generate_n\endlink.</li>
	<li>Allow different implementations for ranges via \link
	fcppt::algorithm::loop_break_impl\endlink.</li>
	<li>Support <code>std::tuple</code> as a range.</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Added \link fcppt::cast::dynamic_cross\endlink and \link
	fcppt::cast::dynamic_cross_exn\endlink.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Ignore <code>-Wfloat-conversion</code> and
	<code>-Wsign-conversion</code> for <code>gcc-6</code> in external
	headers again.</li>
	<li>Ignore <code>-Wexpansion-to-defined</code> for
	<code>clang-3.9</code> in external headers.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added <code>fcppt::container::make_array</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added \link fcppt::container::grid::make_min\endlink and \link
	fcppt::container::grid::make_sup\endlink.</li>
	<li>Added \link fcppt::container::grid::map\endlink.</li>
	<li>Made \link fcppt::container::grid::pos_range\endlink and \link
	fcppt::container::grid::pos_ref_range\endlink assignable.</li>
	<li>Added \link fcppt::container::grid::apply\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainertree
	<ul>
	<li>\link fcppt::container::tree::pre_order\endlink is now
	copyable.</li>
	<li>Added \link fcppt::container::tree::to_root\endlink.</li>
	</ul>
</li>

<li>\ref fcppteither
	<p>
	New library that represents sum types of <em>failure</em> and
	<em>success</em>.
	</p>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added <code>%fcppt::cast_to_enum_exn</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added \link fcppt::io::read_chars\endlink.</li>
	<li>Added \link fcppt::io::get\endlink.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::flatten</code>.</li>
	<li>Added <code>fcppt::mpl::numeric_max</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added \link fcppt::optional::filter\endlink.</li>
	<li>Added \link fcppt::optional::apply\endlink.</li>
	<li>Added \link fcppt::optional::cat\endlink.</li>
	<li>Added \link fcppt::optional::make\endlink.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added \link fcppt::type_traits::is_base_of\endlink that only works
	on complete types.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added \link fcppt::move_if\endlink.</li>
	<li>Added \link fcppt::args\endlink.</li>
	<li>\link fcppt::cyclic_iterator\endlink can now be a random-access
	iterator.</li>
	<li>Added \link fcppt::getenv\endlink.</li>
	<li>Added \link FCPPT_USE\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_210 Changed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Renamed <code>fcppt::cast::try_dynamic</code> to \link
	fcppt::cast::dynamic\endlink, and renamed
	<code>%fcppt::cast::dynamic</code> to \link
	fcppt::cast::dynamic_exn\endlink.</li>
	<li>\link fcppt::cast::dynamic\endlink and \link
	fcppt::cast::dynamic_exn\endlink only work on related types now.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li><code>%fcppt::cast_to_enum</code> now returns an optional.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Moved everything to the \link fcppt::optional\endlink
	namespace.</li>
	<li>Removed optional references and replaced them with optionals to
	\link fcppt::reference\endlink.</li>
	<li>Renamed <code>optional_bind_construct</code> to \link
	fcppt::optional::map\endlink.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Renamed <code>fcppt::reference_wrapper</code> to \link
	fcppt::reference\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>\link fcppt::cyclic_iterator\endlink now uses a pair to construct
	its boundaries.</li>
	<li>\link FCPPT_NONCOPYABLE\endlink and
	<code>FCPPT_NONASSIGNABLE</code> now simply use <code>=delete</code> instead
	of <code>private:</code></li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_210 Removed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::shift_compare</code>.</li>
	</ul>
</li>

<li>fcpptassign
	<ul>
	<li>Removed <code>fcppt::assign::make_container_opt</code>.</li>
	<li>Removed <code>fcppt::assign::make_map</code>.</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>%fcppt::cast::dynamic</code> for pointers.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Removed <code>fcppt::io::read_exn</code>.</li>
	<li>Removed <code>fcppt::io::raw_container_source</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::mod_assign</code>.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Removed <code>fcppt::extract_from_string_exn</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Removed <code>FCPPT_DECLTYPE_SINK</code>.</li>
	<li>Removed <code>fcppt::tag_value</code>.</li>
	</ul>
</li>

</ul>



\section changes_changes_to_200 2.0.0

\subsection changes_general_to_200 General changes

<ul>

<li>
	<b><code>C++14</code> is now required.</b> This probably excludes compilers
	older than <code>gcc-5.2</code> and <code>clang-3.4</code>. However, this
	also leads to several improvements:
	<ul>
	<li>Polymorphic lambdas are now used to initialize arrays with static indices.
	This improves the safety of several algorithms, e.g. <code>matrix *
	vector</code>, <code>matrix * matrix</code> and so on, by checking for
	out-of-bounds accesses at compile-time.</li>
	<li>Heterogenous lookup is now supported. For example, you can search a
	<code>std::set<unique_ptr<int>></code> given an <code>int *</code>.</li>
	</ul>
</li>

<li>
	\ref fcppt.algorithm has been cleaned up substantially:
	<ul>
	<li>
	All <code>_exn</code> functions have been removed in favor of
	<code>%fcppt::optional_to_exception</code>.</li>
	<li>All iterator-based versions have
	been removed in favor of ranges.</li>
	<li>All algorithms can now take rvalues to support views.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_200 Bugfixes

<ul>
<li>\ref fcpptalgorithm
	<ul>
	<li>Fixed return type of <code>fcppt::algorithm::join</code> so it
	never returns a reference.</li>
	</ul>
</li>

</ul>

\subsection changes_added_functionality_to_200 Added functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li>Added <code>NO_CODE</code> flag to
	<code>fcppt_utils_add_test</code> which can be used to generate test
	cases that only consist of static asserts.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added \link fcppt::algorithm::loop\endlink to express loops over
	different ranges, including MPL ranges. Also added \link
	fcppt::algorithm::loop_break\endlink which is similar to the former but
	can break out of the loop early.</li>
	</ul>
</li>

<li>\ref fcpptbit
	<ul>
	<li> New library that makes creating bit masks and testing them a bit
	safer and less tedious. See for example \link
	fcppt::bit::shifted_mask\endlink and \link
	fcppt::bit::test\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added \link fcppt::container::find_opt\endlink which returns a
	reference to <code> value_type</code> instead of
	<code>mapped_type</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Ignore <code>-Wsign-compare</code> in external headers.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added <code>fcppt::mpl::enum_range</code> and <code>fcppt::mpl::enum_range_start_end</code>.<li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added \link fcppt::math::int_range\endlink and \link
	fcppt::math::int_range_count\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Added \link fcppt::math::matrix::init\endlink.</li>
	<li>Added <code>fcppt::math::matrix::at_c</code>.</li>
	<li>Added <code>
	fcppt::math::matrix::delete_row_and_column_static</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathsphere
	<ul>
	<li>Added <code>fcppt/math/sphere/output.hpp</code>.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::copy</code>.</li>
	<li>Added <code>fcppt::mpl::for_each_break</code>.</li>
	<li>Added <code>fcppt::mpl::integral_cast_tpl</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added \link fcppt::io::expect\endlink which fails a stream if it
	cannot read the expected value.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added <code>fcppt::optional_join</code>.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Added \link fcppt::signal::optional_auto_connection\endlink
	typedef.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added \link fcppt::variant::variadic\endlink.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added <code>FCPPT_DECLTYPE_SINK</code> which returns
	<code>decltype</code> of an expression and also uses it. This is useful
	in polymorphic lambdas where the argument is only used for its
	type.</li>
	<li>Added \link fcppt::tag_type\endlink which extracts the type of an
	\link fcppt::tag\endlink.</li>
	<li>Added <code>fcppt::tag_value</code> to extract a
	default-constructed value of a tag, which is useful for integral
	constants.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_200 Changed functionality

<ul>
<li>\ref fcpptalgorithm
	<ul>
	<li>\link fcppt::algorithm::sequence_iteration\endlink, \link
	fcppt::algorithm::map_iteration\endlink and \link
	fcppt::algorithm::map_iteration_second\endlink now expect their
	function to return \link fcppt::algorithm::update_action\endlink
	instead of a bool.</li>
	<li>Renamed <code>%fcppt::algorithm::array_fold_static</code> to
	<code>%fcppt::algorithm::array_init</code>,
	<code>%fcppt::algorithm::enum_array_fold_static</code> to
	<code>%fcppt::algorithm::enum_array_init</code> and
	<code>%fcppt::algorithm::array_init</code> to
	<code>%fcppt::algorithm::array_init_const</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Renamed <code>fcppt::container::find_opt</code> to \link
	fcppt::container::find_opt_mapped\endlink.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Simplified \link fcppt::container::bitfield::object\endlink by
	removing iterator-based functions, <code>operator bool</code>,
	<code>swap</code> and <code>clear</code>.</li>
	<li>Moved comparison operators into
	<code>fcppt/container/bitfield/comparison.hpp</code>.</li>
	<li>Moved all other operators into
	<code>fcppt/container/bitfield/operators.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainertree
	<ul>
	<li>Made \link fcppt::container::tree::child_position\endlink a free
	function and made its implementation safer.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Removed <code>fcppt::enum_is_empty</code>. All enum ranges are now
	non-empty.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Use \link fcppt::math::size_type\endlink directly for static sizes,
	instead of <code>std::integral_constant</code>. This greatly simplifies
	matching of template arguments.</li>
	</ul>
</li>

<li>\ref fcpptmathbox
	<ul>
	<li>\link fcppt::math::box::object\endlink now uses a
	<code>(pos,max)</code> representation instead of
	<code>(pos,dim)</code>. This greatly simplifies a lot of algorithms on
	boxes. It also changes the interface slightly.</li>
	<li>Added \link fcppt::math::box::init_dim\endlink and \link
	fcppt::math::box::init_max\endlink to replace the former
	<code>fcppt::math::box::init</code>.</li>
	<li>Moved <code>null</code> of \link fcppt::math::box::object\endlink
	to \link fcppt::math::box::null\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Use variadic constructors for \link
	fcppt::math::dim::object\endlink.</li>
	<li>Moved <code>null</code> of \link fcppt::math::dim::object\endlink
	to \link fcppt::math::dim::null\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Use variadic constructors for \link
	fcppt::math::matrix::object\endlink which takes a parameter pack of
	\link fcppt::math::matrix::row\endlink.</li>
	<li>Moved <code>identity</code> of \link
	fcppt::math::matrix::object\endlink to \link
	fcppt::math::matrix::identity\endlink.</li>
	</ul>
</li>

<li>\ref fcpptmathsphere
	<ul>
	<li>Moved comparison operators of \link
	fcppt::math::sphere::object\endlink to
	<code>fcppt/math/sphere/comparison.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Use variadic constructors for \link
	fcppt::math::vector::object\endlink.</li>
	<li>Moved <code>null</code> of \link fcppt::math::vector::object\endlink
	to \link fcppt::math::vector::null\endlink.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Renamed <code>fcppt::make_unique_ptr_fcppt</code> to \link
	fcppt::make_unique_ptr\endlink.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_200 Removed functionality

<ul>
<li><code>CMake</code>
	<ul>
	<li>Removed
	<code>BOOST_THREAD_DONT_PROVIDE_DEPRECATED_FEATURES_SINCE_V3_0_0</code>
	which has not been used for a long time.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::array_fold</code> and
	<code>fcppt::algorithm::enum_array_fold</code> which were only useful
	in <code>C++11</code>.
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Removed <code>fcppt::container::find_exn</code> in favor of
	<code>%fcppt::optional_to_exception</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Removed <code>fcppt::container::grid::object::at</code> in favor of
	\link fcppt::container::grid::at_optional\endlink.</li>
	<li>Removed <code>fcppt::container::grid::is_square</code> which is
	covered by \link fcppt::math::dim::is_quadratic\endlink.</li>
	<li>Removed <code>fcppt::container::grid::iterator_position</code>
	which was unused and probably broken.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Removed <code>%at()</code> and <code>empty()</code> from
	<code>%fcppt::container::enum_array</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed default constructors.</li>
	<li>Removed container-like functionality, including iterator-based
	constructors, <code>begin</code>/<code>end</code>, <code>front</code>/
	<code>back</code>, etc, and so on.</li>
	<li>Removed swap implementations because they gained nothing over
	<code>std::swap</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Removed <code>%fcppt::math::vector::project</code> and
	<code>%fcppt::math::vector::orthogonalize</code>.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Removed <code>fcppt::signal::scoped_connection</code> which was a
	typedef to <code>fcppt::signal::auto_connection const</code>.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Removed <code>fcppt::make_unique_ptr</code> which used to create a
	<code>std::unique_ptr</code>.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Removed implicit assignment from the underlying type.</li>
	<li>Removed strong typedef references.</li>
	</ul>
</li>

<li>\ref fcppttime
	<ul>
	<li>Removed <code>fcppt::time::parse_time</code> and
	<code>fcppt::time::parse_date</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::object::get_exn</code>. Use the free
	function \link fcppt::variant::get_exn\endlink instead.</li>
	</ul>
</li>

</ul>
*/

[section Requirements, Download and Installation]

[h1 Requirements]

fcppt needs the following at build time:

* [@http://www.cmake.org >=cmake-2.6]
* [@http://www.boost.org >=boost-1.40]
* A compiler that implements [@http://open-std.org/JTC1/SC22/WG21/docs/papers/2005/n1836.pdf tr1]

To build the documentation the following packages are needed in addition:

* [@http://www.doxygen.org doxygen]
* xsltproc from [@http://xmlsoft.org/XSLT/ libxslt]
* [@http://www.boost.org/doc/tools/quickbook/index.html quickbook] (part of boost)

Tested compilers are:

* gcc-4.6.0 (Gentoo Linux)
* clang-2.9 (MacOS)
* VC++ 2010 SP1 (Windows XP 32 Bit and Windows 7 64 Bit)

[h1 Download]

fcppt is available through our public Git Repository: `git://github.com/freundlich/fcppt.git`.

The latest fcppt release is 0.9.
Get it [@http://supraverse.net/freundlich/fcppt-0.9.tar.bz2 here].

[h1 Installation]

First, you have to create a build directory, for example `mkdir build` inside the fcppt directory.
The build directory cannot be the same as the source directory.

Next, you have to call cmake and pass it fcppt's source directory, for example `cmake ..` if
your build directory is directly below the source directory.

To install fcppt, you have to pass an installation prefix via `cmake -D CMAKE_INSTALL_PREFIX=/home/me/local ..`

There are other customizable paths that you can use to fine tune the installation of different components:

* INSTALL_INCLUDE_DIR: Path where the fcppt include directory is installed
* INSTALL_LIBRARY_DIR: Path where the libraries are installed
* INSTALL_DOC_DIR: Path where the documentation is installed
* INSTALL_PKGCONFIG_DIR: Path where the pkgconfig file is installed
* INSTALL_CMAKEMODULES_DIR: Path where the cmake modules are installed

You can, of course, also use `ccmake` to configure your installation.

[h1 Using fcppt in your project]

Fcppt will also install FindFcppt.cmake into '${CMAKE_INSTALL_PREFIX}/share/cmake/Modules'.
You can change your CMAKE_MODULE_PATH inside your project to point there, if it doesn't already.
The find script can be used as follows.
``

FindPackage(
	Fcppt
	REQUIRED
)

INCLUDE_DIRECTORIES(${FCPPT_INCLUDE_DIRS})
ADD_DEFINITIONS(${FCPPT_DEFINITIONS})

ADD_EXECUTABLE(myproject main.cpp)
TARGET_LINK_LIBRARIES(myproject ${FCPPT_LIBRARIES})
``

Also, if you don't use cmake in your project, there is a pkgconfig file
that will be installed into the `${CMAKE_INSTALL_PREFIX}/lib/pkgconfig`.


[h1 Static and shared builds]

fcppt can be built as a static or shared library,
which is controlled by `ENABLE_STATIC` and `ENABLE_SHARED`,
respectively.
The default is to build a static library for VC++,
while a shared library is the default for anything else.
If you intend to use fcppt as a shared library within VC++,
you need to set `FCPPT_WANT_DYN_LINK=ON` before including FindFcppt.cmake,
which will add `/D FCPPT_DYN_LINK` to `FCPPT_DEFINITIONS`.

If you want to link fcppt to Boost statically, you can set `Boost_USE_STATIC_LIBS=ON`.

[endsect]
